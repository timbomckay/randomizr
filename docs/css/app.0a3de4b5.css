.btn--enlarge {
  transition-duration: 0.2s;
  transition-timing-function: ease-in-out;
  transition-property: transform, box-shadow;
}
.btn--enlarge:hover {
  transform: translateY(-0.25em) scale(1.125);
  box-shadow: 0 10px 14px rgba(0, 0, 0, 0.2);
}
:focus-within > .remove,
:hover > .remove {
  opacity: 1;
  visibility: visible;
}
.presentation-display {
  transform: translateY(-50%);
  transform-origin: center;
}
.slide-fade-enter-active,
.slide-fade-leave-active {
  transition-duration: 0.5s;
  transition-property: opacity, visibility, transform;
}
.slide-fade-enter,
.slide-fade-leave-to {
  opacity: 0;
  visibility: hidden;
}
.slide-fade-enter {
  transform: scale(4) translateY(100vh);
}
.slide-fade-leave-to {
  transform: scale(0.5) translateY(-100vh);
}

/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
:root {
  -moz-tab-size: 4;
  tab-size: 4;
}
html {
  line-height: 1.15;
}
body {
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial,
    sans-serif, Apple Color Emoji, Segoe UI Emoji;
}
b,
strong {
  font-weight: bolder;
}
button,
input {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}
button {
  text-transform: none;
}
[type="button"],
[type="reset"],
[type="submit"],
button {
  -webkit-appearance: button;
}
h1,
h3 {
  margin: 0;
}
button {
  background-color: transparent;
  background-image: none;
}
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}
html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif,
    Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  line-height: 1.5;
}
body {
  font-family: inherit;
  line-height: inherit;
}
*,
:after,
:before {
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
  border-color: #e5e7eb;
}
input::placeholder {
  color: #9ca3af;
}
button {
  cursor: pointer;
}
h1,
h3 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  text-decoration: inherit;
}
button,
input {
  padding: 0;
  line-height: inherit;
  color: inherit;
}
canvas,
svg {
  display: block;
  vertical-align: middle;
}
html {
  font-size: calc(0.78125vw + 14.3125px);
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
@media screen and (max-width: 600px) {
  html {
    font-size: 19px;
  }
}
@media (min-width: 1240px) {
  html {
    font-size: 24px;
  }
}
html *,
html :after,
html :before {
  box-sizing: inherit;
}
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  line-height: 1.25;
  color: #37474f;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
.bg-transparent {
  background-color: transparent;
}
.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}
.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgba(220, 38, 38, var(--tw-bg-opacity));
}
.bg-red-800 {
  --tw-bg-opacity: 1;
  background-color: rgba(153, 27, 27, var(--tw-bg-opacity));
}
.hover\:bg-red-500:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
}
.hover\:bg-red-800:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(153, 27, 27, var(--tw-bg-opacity));
}
.focus\:bg-red-500:focus {
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
}
.bg-opacity-60 {
  --tw-bg-opacity: 0.6;
}
.bg-center {
  background-position: 50%;
}
.bg-no-repeat {
  background-repeat: no-repeat;
}
.hover\:border-current:hover {
  border-color: currentColor;
}
.focus\:border-red-600:focus {
  --tw-border-opacity: 1;
  border-color: rgba(220, 38, 38, var(--tw-border-opacity));
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-full {
  border-radius: 9999px;
}
.border-b-2 {
  border-bottom-width: 2px;
}
.inline-block {
  display: inline-block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.place-content-center {
  place-content: center;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.flex-1 {
  flex: 1 1 0%;
}
.flex-auto {
  flex: 1 1 auto;
}
.font-semibold {
  font-weight: 600;
}
.font-bold {
  font-weight: 700;
}
.font-extrabold {
  font-weight: 800;
}
.h-4 {
  height: 1rem;
}
.h-screen {
  height: 100vh;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-9xl {
  font-size: 8rem;
  line-height: 1;
}
.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.ml-2 {
  margin-left: 0.5rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mr-4 {
  margin-right: 1rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mb-6 {
  margin-bottom: 1.5rem;
}
.mb-8 {
  margin-bottom: 2rem;
}
.mb-10 {
  margin-bottom: 2.5rem;
}
.max-w-sm {
  max-width: 24rem;
}
.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.p-8 {
  padding: 2rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px-16 {
  padding-left: 4rem;
  padding-right: 4rem;
}
.pt-1 {
  padding-top: 0.25rem;
}
.pb-1 {
  padding-bottom: 0.25rem;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.bottom-0 {
  bottom: 0;
}
.left-0 {
  left: 0;
}
.top-1\/2 {
  top: 50%;
}
.resize {
  resize: both;
}
* {
  --tw-shadow: 0 0 transparent;
  --tw-ring-inset: var(--tw-empty, /*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 transparent;
  --tw-ring-shadow: 0 0 transparent;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-gray-300 {
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
}
.focus\:text-white:focus,
.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.tracking-tight {
  letter-spacing: -0.025em;
}
.w-4 {
  width: 1rem;
}
.w-full {
  width: 100%;
}
.gap-4 {
  gap: 1rem;
}
.transform {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-90 {
  --tw-scale-x: 0.9;
  --tw-scale-y: 0.9;
}
.-rotate-6 {
  --tw-rotate: -6deg;
}
.translate-y-0 {
  --tw-translate-y: 0px;
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}
.transition {
  transition-property: background-color, border-color, color, fill, stroke,
    opacity, box-shadow, transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}
.transition-colors {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}
.randomizr {
  background-size: auto 150%;
}
@media screen and (max-width: 600px) {
  .randomizr {
    background-size: cover;
  }
}
svg.icon {
  fill: currentColor;
  height: 1em;
  width: 1em;
}
@media (min-width: 40rem) {
  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
@media (min-width: 48rem) {
  .md\:opacity-0 {
    opacity: 0;
  }
  .md\:invisible {
    visibility: hidden;
  }
  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
