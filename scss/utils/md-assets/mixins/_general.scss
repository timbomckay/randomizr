////
/// General purpose mixins
/// @author Mission Data
/// @access public
////

///
/// Generate a square
/// @group general-mixins
///
/// @param {Length} $length - length of one side.
///
/// @example scss - simple square element
///   @include square(100px);
///
@mixin square($length) {
  height: $length;
  width: $length;
}

///
/// Generate a circle
/// @group general-mixins
///
/// @param {Diameter} $diameter - diameter of circle.
///
/// @example scss - simple circle element
///   @include circle(100px);
///
@mixin circle($diameter) {
  @include square($diameter);
  border-radius: 50%;
}

///
/// Style input placeholder text cross-browser.
/// Acts as a wrapper which accepts multiple properties.
/// @group general-mixins
///
/// @example scss - set color to match input color and font style to italic
///   @include placeholders() {
///     color: currentColor;
///     font-style: italic;
///   }
///
@mixin placeholders() {
  $placeholder-selectors:
    "::-webkit-input-placeholder",
    "::-moz-placeholder",
    ":-ms-input-placeholder",
    ":-moz-placeholder";

  @each $selector in $placeholder-selectors {
    &#{to-string($selector)} {
      @content;
    }
  }
}

///
/// Enable or disable antialiasing.
/// @group general-mixins
///
/// @param {Value}     $value - 'on' or any other value
///
/// @example scss - Sets border radius of 10px on top-left and bottom-right
///   @include font-smoothing('on');
///
@mixin font-smoothing($value: 'on') {
  @if $value == 'on' {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

///
/// Simulate border-radius border-radius while outputting longhand.
/// Declarations will only output if a value is provided.
/// Include variable names in declaration to ensure proper results.
/// @group general-mixins
///
/// @param {Top-Left}     $top-left - top left radius
/// @param {Top-Right}    $top-right - top right radius
/// @param {Bottom-Left}  $bottom-left - bottom left radius
/// @param {Bottom-Right} $bottom-right - bottom right radius
///
/// @example scss - Sets border radius of 10px on top-left and bottom-right
///   @include border-radius($top-left:10px, $bottom-right:10px);
///
/// @example css - CSS output
///   border-top-left-radius: 10px;
///   border-bottom-right-radius: 10px;
///
@mixin border-radius($top-left:null, $top-right:null, $bottom-left:null, $bottom-right:null) {
  border-top-left-radius: $top-left;
  border-top-right-radius: $top-right;
  border-bottom-left-radius: $bottom-left;
  border-bottom-right-radius: $bottom-right;
}

///
/// Enable transition shorthand syntax for multiple properties.
/// @group general-mixins
///
/// @param {Properties} $properties - properties to animate (pProvide comma-separated list as string)
/// @param {Duration}   $duration - duration of transition
/// @param {Timing}     $timing - timing function to calculate against
///
/// @example scss - Enables transition of height and opacity
///   @include multi-transition('height, opacity', .3s, ease-in);
///
/// @example css - CSS output
///   transition-property: 'height, opacity';
///   transition-duration: .3s;
///   transition-timing-function: ease-in;
///
@mixin multi-transition($properties, $duration, $timing) {
  transition-property: #{$properties};
  transition-duration: $duration;
  transition-timing-function: $timing;
}
